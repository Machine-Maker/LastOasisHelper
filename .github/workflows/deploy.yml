# This is a basic workflow to help you get started with Actions

name: deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '13.x'
        
    # Cache node modules
    - name: Cache node moduels
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.map-npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
          
    - uses: borales/actions-yarn@v2.0.0
      with:
        cmd: install
    - uses: borales/actions-yarn@v2.0.0
      with:
        cmd: build
    - uses: borales/actions-yarn@v2.0.0
      with:
        cmd: start

    # Runs a set of commands using the runners shell
    - name: execute remote ssh commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          git clone $GITHUB_WORKSPACE map.driss.io/
          cd map.driss.io/
          
